#  /*
#  * Copyright (c) 2015 Instituto Politecnico de Tomar. All rights reserved.
#  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#  *
#  * This code is free software; you can redistribute it and/or modify it
#  * under the terms of the GNU General Public License version 2 only, as
#  * published by the Free Software Foundation.
#  *
#  * This code is distributed in the hope that it will be useful, but WITHOUT
#  * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
#  * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
#  * version 2 for more details (a copy is included in the LICENSE file that
#  * accompanied this code).
#  *
#  * You should have received a copy of the GNU General Public License version
#  * 2 along with this work; if not, write to the Free Software Foundation,
#  * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#  *
#  */
#//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: 
#//::                                                                         ::
#//::     Antonio Manuel Rodrigues Manso                                      ::
#//::                                                                         ::
#//::     I N S T I T U T O    P O L I T E C N I C O   D E   T O M A R        ::
#//::     Escola Superior de Tecnologia de Tomar                              ::
#//::     e-mail: manso@ipt.pt                                                ::
#//::     url   : http://orion.ipt.pt/~manso                                  ::
#//::                                                                         ::
#//::     This software was build with the purpose of investigate and         ::
#//::     learning.                                                           ::
#//::                                                                         ::
#//::                                                               (c)2015   ::
#//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#//////////////////////////////////////////////////////////////////////////////
FLOWCHART.application.title = Flowchart ver beta  0.92
FLOWCHART.application.copyright = (c) M@nso Abr. 2016 - All right reserved
FLOWCHART.application.help =  Instituto polit\u00e9cnico de Tomar 
FLOWCHART.application.icon = flowchart.png

KEYWORD.error.string = Error
KEYWORD.notDefinedError = Instruction not defined
#---nome da funcao main - Same rules as variables
#KEYWORD.mainFunctionName = MainProgram 
#---nome da funcao main - Same rules as variables
#KEYWORD.globalMemoryName = GlobalMemory

#---nome da funcao main - Same rules as variables
#KEYWORD.defaultFunctionName = Function
#KEYWORD.memory = memory

#-------------------------------------------------------------------------------
OPERATOR.name = Operators
#-------------------------------------------------------------------------------
OPERATOR.arithmetics.name = Aritmethic
OPERATOR.relationals.name = Relacionals
OPERATOR.logics.name = Logics
FUNCTION.name = Functions
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------

#----------Execution ERRROR (Eventually with lots of parameters) ---------
RUNTIME.undefinedException Execution Error \
\n%1 \n %2 \n %3 \n %4 \n %5 \n %6 \n %7 \n %8

#------ decapreted code - to remove in future
RUNTIME.programmingError = Programing error 
#------ name of the runtime memory
RUNTIME.memoryName = Execution Memory
#------ name of dummy shapes in the function call
RUNTIME.dummyFunctionCall = DUMMY

#//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: B U T T O N S
#//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
BUTTON.accept = Accept
BUTTON.accept.title = Accept
BUTTON.accept.help = Accept changes
BUTTON.accept.icon = bt_ok.png
#------------------------------------------------------------------
BUTTON.cancel = Cancel
BUTTON.cancel.title = Cancel
BUTTON.cancel.help = Cancels the operation
BUTTON.cancel.icon = bt_cancel.png
#------------------------------------------------------------------
#------------------------------------------------------------------
BUTTON.delete.title = Delete
BUTTON.delete.help = Deletes the element
BUTTON.delete.icon = bt_delete.png

BUTTON.copy.title = Copy
BUTTON.copy.help = Copies the element into memory
BUTTON.copy.icon = bt_clipboard.png

BUTTON.reject = Reject
BUTTON.reject.title = Reject
BUTTON.reject.help = Rejects
BUTTON.reject.icon = bt_no.png


BUTTON.help = Help
BUTTON.help.title = Help
BUTTON.help.help = More information
BUTTON.help.icon = bt_help.png



#------------------------------------------------------------------
#------------------------------------------------------------------
#------------------------------------------------------------------
#------------------------------------------------------------------
BUTTON.clipboardImg.title = Copy flowchart into memory
BUTTON.clipboardImg.help = Copies the image to the transfer area
BUTTON.clipboardImg.icon = bt_clipboard.png

BUTTON.clipboardTxt.title = Copy algorithm into memory
BUTTON.clipboardTxt.help = Copies the Portugol code to the transfer area
BUTTON.clipboardTxt.icon = bt_clipboard_text.png


BUTTON.saveImage.title = Save image (PNG)
BUTTON.saveImage.help = Saves the image into a PNG file
BUTTON.saveImage.icon = bt_save_Image.png

BUTTON.saveFlux.title = Save Flowchart (FLUX)
BUTTON.saveFlux.help = Saves the flowchart into a FLUX file
BUTTON.saveFlux.icon = bt_save_flux.png
#--------------------------------------------------------------------------------
#//::                                                                         :: MENU
#//::                           HELP                                          ::
#//::                                                                         ::
#//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#//////////////////////////////////////////////////////////////////////////////
HELP.previous.title = 
HELP.previous.help = Previous help page
HELP.previous.icon = arrow_left.png

HELP.next.title = 
HELP.next.help = Next help page
HELP.next.icon = arrow_right.png


HELP.home.title = 
HELP.home.help = Next help page
HELP.home.icon = arrow_up.png
HELP.home.www = http://portal2.ipt.pt/



#--------------------------------------------------------------------------------
#//::                                                                         :: P R O P E R T I E S
#//::::::   P R O P E R T I E S  G U I                                        ::
#//::                                                                         ::
#//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#//////////////////////////////////////////////////////////////////////////////
PROPERTIES.menu.title = Flowchart properties

PROPERTIES.tab.shapes = Shapes
PROPERTIES.tab.show = Version
PROPERTIES.tab.font = Font
PROPERTIES.tab.language = Language
PROPERTIES.tab.user = User



PROPERTIES.shape.transparence = Transparency

PROPERTIES.terminator.title = terminator
PROPERTIES.terminator.help = Start / End / Memory / Functions
PROPERTIES.terminator.icon = shapes/terminator.png

PROPERTIES.define.title = define
PROPERTIES.define.help = Defines variables
PROPERTIES.define.icon = shapes/define.png

PROPERTIES.write.title = Write
PROPERTIES.write.help = Writes the output in the console
PROPERTIES.write.icon = shapes/write.png

PROPERTIES.read.title = Read
PROPERTIES.read.help = Reads variables
PROPERTIES.read.icon = shapes/read.png


PROPERTIES.execute.title = Execute
PROPERTIES.execute.help = Executes calculations and functions
PROPERTIES.execute.icon = shapes/execute.png

PROPERTIES.return.title = Return
PROPERTIES.return.help = Returns values from functions
PROPERTIES.return.icon = shapes/return.png

PROPERTIES.jump.title = Continue/Exit
PROPERTIES.jump.help = Continues or exits a cycle
PROPERTIES.jump.icon = shapes/jump.png

PROPERTIES.decision.title = Decisions
PROPERTIES.decision.help = If , While and Do
PROPERTIES.decision.icon = shapes/decision.png

PROPERTIES.connector.title = Conector
PROPERTIES.connector.help = If and Do While
PROPERTIES.connector.icon = shapes/connector.png

PROPERTIES.iteration.title = Iteration
PROPERTIES.iteration.help = From and To
PROPERTIES.iteration.icon = shapes/iteration.png
#------------------------------------------------------------------------------- VIEW / EDITION
PROPERTIES.arrow.title = Arrows
PROPERTIES.arrow.help = Algorithm flow
PROPERTIES.arrow.icon = shapes/arrow.png

PROPERTIES.selected.title = Selection / Execution
PROPERTIES.selected.help = Select a shape
PROPERTIES.selected.icon = shapes/selected.png

PROPERTIES.error.title = Error
PROPERTIES.error.help = shape with errors
PROPERTIES.error.icon = shapes/error.png

PROPERTIES.run.title = Execute
PROPERTIES.run.help = Execute Shape
PROPERTIES.run.icon = shapes/run.png

PROPERTIES.shapeBorder.title = Border
PROPERTIES.shapeBorder.help = Shape borders

PROPERTIES.arrowLenght.title = Arrows
PROPERTIES.arrowLenght.help = Arrow size

PROPERTIES.space.title = Space
PROPERTIES.space.help = Horizontal space between shapes

#------------------------------------ SYNTAX HIGHLIGHT

PROPERTIES.tab.font.italic = Italic
PROPERTIES.tab.font.bold = Bold
PROPERTIES.tab.font.size = Size

PROPERTIES.background.title = Backgroud
PROPERTIES.background.help = Background colour

PROPERTIES.normal.title = abcd
PROPERTIES.normal.help = normal text

PROPERTIES.keyword.title = key
PROPERTIES.keyword.help = language key words

PROPERTIES.string.title = "text"
PROPERTIES.string.help = text

PROPERTIES.real.title = 3.15159
PROPERTIES.real.help = Real numbers

PROPERTIES.int.title = 1234
PROPERTIES.int.help = Real numbers

PROPERTIES.logic.title = True
PROPERTIES.logic.help = Logical values

PROPERTIES.operator.title = +-&&
PROPERTIES.operator.help = Operators

PROPERTIES.function.title = functions
PROPERTIES.function.help = Functions


#//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: TAB USERNAME
PROPERTIES.userName.title = User
PROPERTIES.userName.help = Username

PROPERTIES.userFullName.title = Full name
PROPERTIES.userFullName.help=Users full name


PROPERTIES.userNumber.title = User Number
PROPERTIES.userNumber.help = User Number

PROPERTIES.userAvatar.title = Photo
PROPERTIES.userAvatar.help = Click to change photo
PROPERTIES.userAvatar.icon = user/unknow_user.png
PROPERTIES.userAvatar.message = Choose an image

PROPERTIES.userNewPassword1.title = New password
PROPERTIES.userNewPassword1.help = New User Password

PROPERTIES.userNewPassword2.title = Confirm password
PROPERTIES.userNewPassword2.help = Confirms User Password

PROPERTIES.passwordNotMatch = Passwords don't match. The password was NOT changed.
PROPERTIES.passwordWrong = The password is wrong

PROPERTIES.deleteUser.title = Delete User
PROPERTIES.deleteUser.help= Do you wish to delete the user?





#//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#//::                                                                         ::
#//::             F L O W C H A R t    G U I                                  ::
#//::                                                                         ::
#//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#//////////////////////////////////////////////////////////////////////////////
DIALOG.title.text = Flowchart 
DIALOG.title.icon = flowchart.png

DIALOG.exception.title = Compilation Error
DIALOG.exception.icon = warning.png 

DIALOG.compile.error.title = Compilation Error
DIALOG.compile.error.message = Syntax or semantic errors in \n %1
DIALOG.compile.error.icon = error.png 

DIALOG.compile.ok.title = Compilation Complete
DIALOG.compile.ok.message = There wasn't any syntax or semantic errors
DIALOG.compile.ok.icon = ok.png 


DIALOG.run.tile = Execution Error
DIALOG.run.icon = Dialog_error.png 


#//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: A R R O W ::::::::::::::::::
#//::                                                                         ::
#//::             M E N U   A R R O W                                         ::
#//::                                                                         ::
#//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#//////////////////////////////////////////////////////////////////////////////
MENU.arrow.title = Add instruction
MENU.arrow.help = Add and instruction to the program\
\n in the selected point.

SHAPE.type.simple = Simple
SHAPE.type.simple.help = Processing
SHAPE.type.complex = Composed
Decision\ and\ Iterations=Decision and Iterations
SHAPE.type.other = Flow
SHAPE.type.other.help = Flow change

#------------------------------------------------------------------------
#KEYWORD.main.title = Program
#KEYWORD.main.help =  Main Program\
#\n Function responsible of the start of the process.

#KEYWORD.main.icon = shapes/function.png
#KEYWORD.define.icon = shapes/define.png
#------------------------------------------------------------------------
#//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: MAIN :::::::::::::::::::::::::::
#//::                                                                         ::
#//::             M E N U   M A I N                                    ::
#//::                                                                         ::
#//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#//////////////////////////////////////////////////////////////////////////////
MENU.comments.title = Comments
MENU.comments.help = Comments about the instruction
MENU.comments.icon = bt_comments.png

MENU.help.title = Help
MENU.help.help = Help about the instruction
MENU.help.icon = bt_help.png

MENU.OK.title = Accept
MENU.OK.help = Accept the current changes
MENU.OK.icon = bt_OK.png

MENU.cancel.title = Cancel
MENU.cancel.help = Cancels the changes
MENU.cancel.icon = bt_cancel.png

MENU.instruction.title = Instruction
MENU.instruction.help = Cancels the current changes




#//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: MAIN :::::::::::::::::::::::::::
#//::                                                                         ::
#//::             M E N U   M A I N                                    ::
#//::                                                                         ::
#//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#//////////////////////////////////////////////////////////////////////////////

MAIN.instruction.title = Main Program
MAIN.instruction.icon =  shapes/terminator.png
MAIN.instruction.www =  main.html
MAIN.instruction.help =  Main Program - Program responsible to start the process
#//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: D E F I N E :::::::::::::::::::::::::::
#//::                                                                         ::
#//::             M E N U   D E F I N E                                       ::
#//::                                                                         ::
#//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#//////////////////////////////////////////////////////////////////////////////
#------------------------------------------------------------------------
DEFINE.menu.title = Create variable

DEFINE.instruction.title = Define Varible
DEFINE.instruction.icon =  shapes/define.png
DEFINE.instruction.www =  define.html
DEFINE.instruction.help = Creates variables in the memory to keep \
\n data during the program execution.



#//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: D E F I N E :::::::::::::::::::::::::::
#//::                                                                         ::
#//::             M E N U   D E F I N E                                       ::
#//::                                                                         ::
#//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#//////////////////////////////////////////////////////////////////////////////
#------------------------------------------------------------------------
DEFINE.menu.title = Create Variable 

DEFINE.instruction.title = Define Variables
DEFINE.instruction.icon =  shapes/define.png
DEFINE.instruction.www =  define.html
DEFINE.instruction.help =  Creates variables in the memory to keep \
\n data during the program execution.

DEFINE.tab.value.title = Initialization
DEFINE.tab.value.help = Start value of the variable
DEFINE.tab.value.icon = shapes/define.png


DEFINE.tab.array.title = Array
DEFINE.tab.array.help = Array dimensions
DEFINE.tab.array.icon = shapes/define.png




DEFINE.type.title = Type
DEFINE.type.help = Variable data type

DEFINE.name.title = Name
DEFINE.name.help = Variable name

DEFINE.value.title = Value
DEFINE.value.help = Initial value for the variable

DEFINE.level.title = Level
DEFINE.level.help = Defined level of the variable

DEFINE.expression.title = Value
DEFINE.value.help = Initial value of the variable

DEFINE.comments.title = Comment
DEFINE.comments.help = Help about the variable

DEFINE.array.title= Array
DEFINE.array.help = Indexed data set

DEFINE.expression.title = Expression
DEFINE.expression.help = Variable Initial value






DEFINE.columns.title = Columns
DEFINE.columns.help = Number of columns (elements) of the array

DEFINE.lines.title = Lines
DEFINE.lines.help = Number of Lines of the array

DEFINE.definition.title = Array dimension
DEFINE.definition.help = Array dimensions inside of square parenthises []

#------------------------------------------------------------------------------
#-------------  E X C E P T I O N S           --------------------------------- 
#------------------------------------------------------------------------------

DEFINE.invalidValue = The value %1 can't be set into variables of type %2

DEFINE.unknowType = The type of data %1 is unknown.

DEFINE.invalidName.empty = Variable name cannot be empty

DEFINE.invalidName.notChar = Variable name %1 is not valid,\n character %2 is not valid.,\
\n\n Names have to start with a letter,\
\nthe following characters can be letters or numbers.

DEFINE.invalidName.reservedWord = Variable name %1 is not valid, %1 is a reserved word.

DEFINE.duplicatedName = Variable name %1 already taken,\
\n %2\ \n it is impossible to have two variables with the same name

DEFINE.variableNotDefined = The variable %1 is not yet defined.


DEFINE.indexNotInteger The value of the array index must be a positive integer\
\n correct the element %1

DEFINE.invalidIndexValue The value of the index number has to be a number bigger than 1\
\n %1 is not a valid number for the array ( %2 )


DEFINE.invalidSymbol = The symbol %1 of the expression \n %2 \n is not valid.

DEFINE.unknowType = %1 is an uknown data type.

DEFINE.invalidTextDefiniton = The element %1 of the expression \n %2\
\n is not valid - Invalid Text %3
DEFINE.invalidCharDefiniton = The element %1 of the expression \n %2\
\n is not valid - Invalid Character %3


#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::R E A D ::::::::::::::::::::::::
#------------------------------------------------------------------------------
#-------           M E N  U     R E A D                        -------------
#------------------------------------------------------------------------------
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

#----------------ARROW MENU ----------------------------------------------------
READ.instruction.title = Read Variables
READ.instruction.icon = shapes/read.png
READ.instruction.www =  read.html
READ.instruction.help =  Reads the value from the console\
\n The input will change the variable value


READ.tab.read.title = Read
READ.tab.read.help = Variable to read
READ.tab.read.icon = shapes/read.png

READ.tab.read.title = Read
READ.tab.read.help = Variable to read
READ.tab.read.icon = shapes/read.png


READ.tab.memory.title = Memory
READ.tab.memory.help = Variable stored in memory
READ.tab.memory.icon = shapes/read.png

READ.tab.define.title = Define new
READ.tab.define.help = Defines a new Variable to read
READ.tab.define.icon = shapes/define.png


READ.newName.title = Name
READ.newName.help = Name of the Variable

READ.newType.title = Type
READ.newType.help = Type of the variable


READ.name = Variable
READ.name.help = Variable to be read


READ.name = Variable
READ.name.help = Variable to be read

READ.comments = Comment
READ.comments.help = Help about the variable

READ.noneVariablesDefined = There are no variables defined

READ.variableNotExists = The variable %1 does not exist.

READ.variableArrayWrongIndexes = Is only possible read array elements
\n o array %1 precisa de ter %2 indices e tem %3


READ.abortedInput = User input was aborted by the user.



#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: W R I T E ::::::::::::::::::::::::
#------------------------------------------------------------------------------
#-------           M E N  U     W R I T E                        -------------
#------------------------------------------------------------------------------

#----------------ARROW MENU ----------------------------------------------------
WRITE.instruction.title = Write
WRITE.instruction.www =  write.html
WRITE.instruction.icon = shapes/write.png
WRITE.instruction.help =  Displays information on the program console, evaluates an expression and displays the result\n\u00a0 The text must be in quotes ( "") and the variables are concatenated\n\u00a0by the addition operator (+)
\n The text has to be between quotes ("") and the variables concatenated with the SUM operator (+)


WRITE.tab.write.title = Write
WRITE.tab.write.help = Expression to write in the console
WRITE.tab.write.icon = shapes/write.png


WRITE.expression = Expression
WRITE.expression.help = Variable or expression

WRITE.comments = Comment
WRITE.comments.help = Help about the information written in the console

WRITE.noReturnExpression = The expression %1 does not have a return value

#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#------------------------------------------------------------------------------    EXECUTE
#-------           M E N  U      E X E C U T E                      -------------
#------------------------------------------------------------------------------
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
EXECUTE.menu.title = Execute Calculations and Functions
EXECUTE.intruction.www = execute.html
#----------------ARROW MENU ----------------------------------------------------
EXECUTE.instruction.title = Execute
EXECUTE.instruction.icon = shapes/execute.png
EXECUTE.instruction.help =  Executes calculations or procedures\
\n the output is saved on a pre-defined variable.

EXECUTE.tab.calcutate.title = Calculate
EXECUTE.tab.calcutate.help = Calculates the value of an expression
EXECUTE.tab.calcutate.icon = shapes/execute.png


EXECUTE.tab.execute.title = Execute
EXECUTE.tab.execute.help = Executes a procedure or a function
EXECUTE.tab.execute.icon = shapes/execute.png


EXECUTE.tab.array.title = Array
EXECUTE.tab.array.help = Array dimensions
EXECUTE.tab.array.icon = shapes/define.png



EXECUTE.name = Variable
EXECUTE.name.help = Name of the variable to be calculated.

EXECUTE.value = Expression
EXECUTE.value.help = New value for the variable

EXECUTE.comments = Comment
EXECUTE.comments.help = Help about the calculation
#--------------------------------------------------------------------------------
EXECUTE.returnTypeInvalid = is not possible to assign a variable of %1 to %3\nvariable  %1 = %2 \nExpression %3 = %4\n

EXECUTE.variableNotExists = The variable %1 does not exist.

EXECUTE.returnNotCatch = The %1 expression does not have an output variable defined.

EXECUTE.array.notArray = The variable %1 is not an array, so it can not be indexed
EXECUTE.array.notIndexes = to access the values of array %1 you need to define indexes

EXECUTE.array.invalidNumberOfIndexes = The array %1 has %2 indexes and the expression %3\
has %4 indexes\
\n please check the indexes.

EXECUTE.array.indexNotInteger = The index value %1 of the expression %2 is not a positive Integer.

EXECUTE.array.indexNegative = The index value % of the expression %2 is not a positive Integer.

EXECUTE.array.indexInvalid = The value %1 is not a valid index for %2. \
\n Please verify the expression and define an index between the values of %2 and %3.


EXECUTE.array.indexEmpty = The index value is empty
EXECUTE.array.indexInvalidNotChar = The index value has to be beween %1 and %2
EXECUTE.array.indexInvalidStart = The array index has to start with the value %1
EXECUTE.array.indexInvalidEnd = The array index has to end with the value %1


EXECUTE.function.paramEmpty = Error while defining the function parameter


#//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: D E C I D E :::::::::::::::::::
#//::                                                                         ::
#//::            M E N U   D E C ID E                                         ::
#//::                                                                         ::
#//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#//////////////////////////////////////////////////////////////////////////////



DECIDE.expression = Condition
DECIDE.expression.help = Condition for the decision


DECIDE.comments = Comment
DECIDE.comments.help = Help about decision structures
#//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: EXCEPTIONS
DECIDE.noLogicReturn = The %1 expression is not a logic decision
#//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: I F :::::::::::::::::::
IF.menu.title = Execute decisions


IF.instruction.title = If...Then...Else...
IF.instruction.www = if.html
IF.instruction.icon = shapes/if.png
IF.instruction.help =  turn the flow of execution based on a condition.\nif the condition is true, then executes type THEN instructions\n else, executes ELSE instructions
\n The result of the condition selects the instructions to execute\
\n If the condition is TRUE, it follows the THEN flow, if not, it follows the ELSE flow

IF.tab.instruction.title = Decision
IF.tab.instruction.help = Logical expression to make the decision
IF.tab.instruction.icon = shapes/if.png

IF.if = If
IF.then = Then
IF.else = Else
#//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::WHILE:::::::::::::::::::

WHILE.instruction.www = while.html
WHILE.instruction.title = While ... Do
WHILE.instruction.icon = shapes/while.png
WHILE.instruction.help = Repeats a set of instructions based on a condition.
\n The result of the condition determines wether the cycle repeats or not.

WHILE.tab.instruction.title = Decision
WHILE.tab.instruction.help = Logical expresion to make the decision
WHILE.tab.instruction.icon = shapes/while.png


WHILE.while = While
Do=Do

#//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::DO:::::::::::::::::::
DO.instruction.www = while.html
DO.instruction.title = Do ... While 
DO.instruction.icon = shapes/do.png
DO.instruction.help = Repeats a set of instructions based on a condition.
\n the array %1 needs to have %2 and have %3\n

DO.tab.instruction.title = Decision
DO.tab.instruction.help = Logical expression to make the decision
DO.tab.instruction.icon = shapes/do.png


DO.while = While
DO.do = Do
#//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: F O R :::::::::::::::::::
FOR.menu.title = For X from Y untill Z Step K
FOR.intruction.www = for.html

#default name for the iterators i1 i2, .... in
FOR.iterator.defaultName = i

FOR.instruction.title = For X from Y untill Z step K
FOR.instruction.icon = shapes/for.png
FOR.instruction.help = Iterates a set of numbers \
\nThe iterated values are controlled by the step\

FOR.tabVariable.title = Iterator
FOR.tabVariable.help = Iterates a variable defined in the program
FOR.tabVariable.icon = shapes/for.png

FOR.tab.memory.title = Memory
Choose\ a\ variable\ from\ memory=Choose a variable from memory
FOR.tab.memory.icon = memory.png

FOR.tab.iterator.title = Iterator
FOR.tab.iterator.help = Defines a new variable for the iterator 
FOR.tab.iterator.icon = add.png



FOR.memVariable.title = Variable stored in Memory
FOR.memVariable.help = Iterates a variable defined in the program

FOR.varIterator.type.title = New Iterator
FOR.varIterator.type.help = Variable type

FOR.varIterator.name.title = Name
FOR.varIterator.name.help = Iterator variable name



FOR.iteration.title = Variable Iteration

FOR.start.title = Start
FOR.start.help = Initial value

FOR.stop.title = End
FOR.stop.help = End value (included)

FOR.step.title = Step
FOR.step.help = Distance between values Start and End

FOR.exception.variableDefined = The defined variable %1 already exists.
FOR.exception.expressionsNotDefined = Expressions not defined.
FOR.exception.noNumericVariable = There are no Integer variables defined

FOR.exception.resultNotNumeric = The output of the expression %1 has the data type %2 \
\nand can not be converted into an Integer

#//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: J U M P :::::::::::::::::::::::::::
#//::                                                                         ::
#//::             M E N U   J U M P                                           ::
#//::                                                                         ::
#//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#//////////////////////////////////////////////////////////////////////////////
JUMP.menu.title = Jump from the cicle
JUMP.intruction.www = jump.html

JUMP.instruction.title = Jump from the cicle
JUMP.instruction.icon = shapes/jump.png
JUMP.instruction.help =  change flow of the cycle\nbreak - exits the cycle\ncontinue - continue to next iteration\n

JUMP.jump.title = Jump
JUMP.jump.help =  Uncondicional jump
JUMP.jump.icon = shapes/jump.png


JUMP.break.help = Exits cycle
JUMP.continue.help = Continue to next iteration

JUMP.comments.title = Commentary
JUMP.comments.help=unconditional jumps within one cycle

JUMP.exception.noCicle = There is no cycles


#--------------------------------------------------------------------------------
#//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: F U C N T I O N    R E T U R N :::::::::::::::::::
#//::                                                                         ::
#//::            F U C N T I O N    R E T U R N                               ::
#//::                                                                         ::
#//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#//////////////////////////////////////////////////////////////////////////////
RETURN.menu.title = Return

RETURN.instruction.www = return.html
RETURN.instruction.title = Terminate the function
RETURN.instruction.icon = shapes/return.png
RETURN.instruction.help=terminate the function in execution and returns a value.\nif the function does not have a return, it returns nothing
 
RETURN.expression.title = Return
RETURN.expression.help = variable or expression
RETURN.expression.icon = shapes/return.png

RETURN.comments.title = Commentary
RETURN.comments.help = help about wrote information on the console

RETURN.noReturn = the function needs to return a value
RETURN.emptyReturn = function returns %1\ninsert expression type %1
RETURN.returnEInvalidType = function returns %1 and the expression %2 is type %3


#------------------------------------------------------------------
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::F U N C T I O N :::::::::::::::::::::::::::::::
#------------------------------------------------------------------------------
#-------           M E N  U    F U N C T I O N                   -------------
#------------------------------------------------------------------------------
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# label do popumenu das caixas de texto das express\u00f5es
FUNCTION.menu.title = new function
#nome por defeito das fun\u00e7\u00f5es
FUNCTION.defaultName = function
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#-- separador das fun\u00e7\u00f5es no popup menu das express\u00f5es --
FUNCTION.popupMenu.functions = Functions
FUNCTION.popupMenu.functions.trigonometry = trigonometry
FUNCTION.popupMenu.functions.math = Mathematics
FUNCTION.popupMenu.functions.text = Text

#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

FUNCTION.instruction.www = function.html
FUNCTION.instruction.title = new function
FUNCTION.instruction.icon = shapes/function.png
FUNCTION.instruction.help =  defines new algorithm for the program\nthe algorithm executes a bunch of instructions\nfor the main program
#------------------------------------------ TABS -------------------------------
FUNCTION.tabFuncName.title = function
FUNCTION.tabFuncName.help = new function definition
FUNCTION.tabFuncName.icon = shapes/function.png
#-------------------------------------------------------------------------------
#------------------------------------------ DEFINICAO --------------------------
FUNCTION.nameFunc.title = name
FUNCTION.nameFunc.help = function name

FUNCTION.return.title = Return
FUNCTION.return.help = data type calculated by function

FUNCTION.returnArray.title = Array ?
FUNCTION.returnArray.help = Return an Array ?
#-------------------------------------------------------------------------------
#------------------------------------------ PARAMETROS --------------------------
FUNCTION.defParams.title = Parameters
FUNCTION.defParams.help = parameters defined by function

FUNCTION.nameParameter.title = name
FUNCTION.nameParameter.help = parameters name

FUNCTION.typeParameter.title = type
FUNCTION.typeParameter.help = data type of parameter

FUNCTION.buttonAdd.title = add
FUNCTION.buttonAdd.help = add parameter
FUNCTION.buttonAdd.icon = add.png

FUNCTION.buttonRemove.title = Remove
FUNCTION.buttonRemove.help = Remove parameter
FUNCTION.buttonRemove.icon = remove.png

FUNCTION.isParameterArray.title = Array ?
FUNCTION.isParameterArray.help = is the parameter an Array?
#-------------------------------------------------------------------------------

FUNCTION.fullDefinition.title = Instruction
FUNCTION.fullDefinition.help = definition of instruction of the function


#------------------------------------------------------------------------------
FUNCTION.invalidName = the name %1 is not valid
FUNCTION.invalidDefinition = the instruction begins with %1

FUNCTION.invalidBrackets = the parameters have to be defined between parentheses %1 and %2\n

FUNCTION.invalidParameterDef = the parameter %1 have to be two words\ndataType nameParameter\n

FUNCTION.invalidReturn =  the return type of the function %1 is not valid

FUNCTION.invalidReturn.Array =  the array type in return function %1 is wrong. use\ndataType[] functionName(parameters)\nto define a function that returns an array

FUNCTION.invalidParameter.Array =  type %1 of parameter function is wrong. use\ndataTypeName[]\nto define an array type parameter


FUNCTION.invalidNameMain =  Error: %1 is the name of the main program\nchooser another name
FUNCTION.invalidNameMemory =  Error: %1 is the name of the main memory\nchoose another name
FUNCTION.invalidNameMemoryVar =  Error: %1 is the name of one variable from the main memory\nchoose another name
FUNCTION.invalidDuplicateName =  Error:%1 is the name of a defined function\nchoose another name
FUNCTION.invalidNameDuplicateParameter =  Error: %1 is the name of a parameter defined\nchoose another name
#//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::F U C N T I O N    C A L L :::::::::::::::::::
#//::                                                                         ::
#//::            F U C N T I O N    C A L L                                   ::
#//::                                                                         ::
#//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#//////////////////////////////////////////////////////////////////////////////
FUNCTIONCALL.invalidNumberOfParameters = the number of parameters is wrong. function %1 has %2 parameters and were supplied %3 parameters\n

FUNCTIONCALL.invalidTypeOfParameter = parameter %1 of function %2 is not compatible with result %3


#------------------------------------------------------------------
#//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#//::                                                                         ::
#//::             F L O W C H A R t    G U I                                  ::
#//::                                                                         ::
#//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#//////////////////////////////////////////////////////////////////////////////

STRING.pnArrowSimple = Simple
STRING.pnArrowComplex = Complex

STRING.arrow.true = yes
STRING.arrow.false = No


STRING.help = help

STRING.edit = Edit

STRING.example= Example
STRING.delete = erase
STRING.new = New
STRING.update = change

STRING.dataType = Type
STRING.dataName = Name
STRING.dataValue = Value
STRING.dataArray = Vector
STRING.dataSize = size

STRING.comments = Commentary
STRING.error = Error
STRING.instruction = Instruction
STRING.variable = variable
STRING.expression = Expression

STRING.variables = Variables
STRING.constants = Constants
STRING.funcoes = defined functions

#--------------------- FLOWCHAR ----------------------------------------
#--------------------------------------------------------------------------------
#--------------------------------------------------------------------------------
FLOWCHART.exception.title = error in flowchart definition
FLOWCHART.exception.icon = Message_Error.png

MAINGRAPH.globalMemoryName = globalMemory
MAINGRAPH.mainFunctionName = mainProgram
MAINGRAPH.functionName = function
#--------------------------------------------------------------------------------
#--------------------- PROGRAM----------------------------------------
#--------------------------------------------------------------------------------
#--------------------------------------------------------------------------------
.coments = commentary
PROGRAM.error.load = Error: can't read file program %1\n%2\n
PROGRAM.error.save = Error: can't write file program %1\n%2\n

PROGRAM.file.filterText = flowchart in programs
PROGRAM.file.filterExt = prog
PROGRAM.file.defaultFileName = programWithoutName

PROGRAM.file.memory.filterText = global memory definition
PROGRAM.file.memory.filterExt = flux
PROGRAM.file.memory.defaultFileName = memoryWithoutName

PROGRAM.file.function.filterText = defined function by programmer\n
PROGRAM.file.function.filterExt = flux
PROGRAM.file.function.defaultFileName = functionWithoutName



#--------------------------------------------------------------------------------
#--------------------- FUNCTIONS ----------------------------------------
#--------------------------------------------------------------------------------
#--------------------------------------------------------------------------------
BEGIN.startProgram  = ::::::::       Home Program          :::::::::
MEMORY.globalMemory = ::::::::       Define Global Memory      :::::::::
END.endProgram      = ::::::::  The program ended sucessfully :::::::::


#--------------------------------------------------------------------------------
#--------------------------------------------------------------------------------

#--------------------------------------------------------------------------------
#--------------------------------------------------------------------------------
#--------------------------------------------------------------------------------

#--------------------------------------------------------------------------------
#--------------------------------------------------------------------------------
#--------------------------------------------------------------------------------
#--------------------------------------------------------------------------------
#--------------------------------------------------------------------------------

#--------------------------------------------------------------------------------

#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#------------------------------------------------------------------------------
#-------         D E F I N E    S Y M B O L S                     -------------
#-------           M E N  U      D E F I N E                      -------------
#------------------------------------------------------------------------------
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

TYPE.array.indexOutOfBounds = index %1 is not valid\ndefine index between 0 and %2

TYPE.array.arrayExpected = it was expected an array name before of\n %1\u00bb\u00bb\u00bb%2\u00ab\u00ab\u00ab%3

TYPE.array.badNumberOfDimensions = Error on number of array dimensions\narray %1 contains %2 dimensions and they were given %3\n

TYPE.array.intExpected = index value must be integer number\n %1 is value %2

TYPE.array.errorBetweenIndexes = error in element  %1

TYPE.array.emptyDimension = at least one dimension is requiered for array definition %1

TYPE.array.errorinLinkage = error connection between %1 and %2

#--------------------------------------------------------------------------------
#--------------------------------------------------------------------------------
CALCULATE.help = executes calculations\nwith operators and functions\n


TOKEN.error.wrongParams = parameters in wrong order


OPERATOR.error.numParams = the calculation %1 requires %2 operands, the expression have %3

OPERATOR.error.typeParams = the operator %1 in not avaliable for data type %2\nit is impossible to execute %3 calculation

OPERATOR.error.divisionByZero = division by zero: 1%\nit is impossible to perform the calculation 2%

FUNCTION.error.typeParams = the function %1 is not avaliable for arguments type %2\nit is impossible to execute calculation %3

FUNCTION.error.sqrtNegative = that is not possible to calculate square roots of negative numbers \n%1


EVALUATE.error.unknow uknown error \n %1
EVALUATE.error.expressionError error expression\n%1\ninvalid expression
EVALUATE.error.expressionAmbiguous ambiguous expression\n %1 \n %2\n %3\n %4
EVALUATE.error.unknowElement the symbol %1 is uknown on the expression\n  %2 \u00bb\u00bb\u00bb%3\u00ab\u00ab\u00ab %4 \ncheck the syntax %3
EVALUATE.error.parentesisNotMatch Parenthesis %1 and %2 of the expression\n  %3 \u00bb\u00bb\u00bb%4\u00ab\u00ab\u00ab %5 \ndon't combine
EVALUATE.error.parentesisNotOpen the parenthesis %1 of the expression\n  %2 \u00bb\u00bb\u00bb%3\u00ab\u00ab\u00ab %4 \nit was not opened
EVALUATE.error.parentesisNotClose the parenthesis %1 of the expression\n  %2 \u00bb\u00bb\u00bb%3\u00ab\u00ab\u00ab %4 \nis not closed

EVALUATE.error.numberParameters the symbol %1 of the expression\n  %2 \u00bb\u00bb\u00bb%3\u00ab\u00ab\u00ab %4 \nneeds %5 parameters and has only %6

EVALUATE.error.expressionNotDefined the expression is not defined
PROGRAMMING.notImplemented = the funcionality %1 is not implemented yet\nit will be displayed as soon as possible\n

PROGRAMMING.error = this should never happen
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#------------------------------------------------------------------------------
#-------         D I A L O G  S                                   -------------
#------------------------------------------------------------------------------
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

DIALOG.flowchartMenu.icon = flowchart.png


DIALOG.exception.compile.title = codification error
DIALOG.exception.compile.icon = warning.png

DIALOG.exception.compile.report.icon = send_report.png
DIALOG.exception.compile.report.text = report error
DIALOG.exception.compile.report.help = report error (coming soon ...)


DIALOG.error.compile.title = compilation error
DIALOG.error.compile.icon = error.png




####----------------------------- SAVE CODE ---------------
DIALOG.code.title = algorithm code
DIALOG.code.icon = text.png


DIALOG.code.save.title = save
DIALOG.code.save.icon = save_code.png
DIALOG.code.save.help = save code in a file

DIALOG.code.clipboard.title = copy
DIALOG.code.clipboard.icon = bt_clipboard_text.png
DIALOG.code.clipboard.help = copy code to clipboard


CONSOLE.btCleanInput.title = 
CONSOLE.btCleanInput.help = eliminate the input of the program
CONSOLE.btCleanInput.icon = bt_delete.png
\u00b4
CONSOLE.copyConsole.title = 
CONSOLE.copyConsole.help = copy text of console to memory
CONSOLE.copyConsole.icon = bt_clipboard_text.png


#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#------------------------------------------------------------------------------
#-------         LAUNCHER                                   -------------
#------------------------------------------------------------------------------
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

LAUNCHER.okUser.title = User
LAUNCHER.okUser.help = accept user
LAUNCHER.okUser.icon = user/ok_user.png

LAUNCHER.selectUser.title = Users
LAUNCHER.selectUser.help = Select user
LAUNCHER.selectUser.icon = user/select_user.png

LAUNCHER.newUser.title = New user
LAUNCHER.newUser.help = Add new user
LAUNCHER.newUser.icon = user/add_user.png

LAUNCHER.newUser.duplicatedName = The user %1 already exists

LAUNCHER.about.title = Algorithmi
LAUNCHER.about.help = about
LAUNCHER.about.icon = flowchart.png

LAUNCHER.deleteUser.title = delete
LAUNCHER.deleteUser.help = delete user
LAUNCHER.deleteUser.icon = user/delete_user.png

LAUNCHER.addUser.title = read
LAUNCHER.addUser.help = read user from a file
LAUNCHER.addUser.icon = user/load_user.png

LAUNCHER.users.list = Users
LAUNCHER.users.info = Information

LAUNCHER.name.title = User
LAUNCHER.name.help = Username


LAUNCHER.fullName.title = Name
LAUNCHER.fullName.help = Full name

LAUNCHER.number.title = Number
LAUNCHER.number.help = User number
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#------------------------------------------------------------------------------
#-------         TRANSLATOR                                   -------------
#------------------------------------------------------------------------------
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
TRANSLATOR.naturalLanguage.title = Natural language
TRANSLATOR.naturalLanguage.help = Portugol
TRANSLATOR.naturalLanguage.file = alg

TRANSLATOR.tokens.title = International
TRANSLATOR.naturalLanguage.help = International language
TRANSLATOR.naturalLanguage.file = tok


TRANSLATOR.langC.title = C Language 
TRANSLATOR.langC.help = C 99
TRANSLATOR.langC.file = c

TRANSLATOR.java.title = Java Language
TRANSLATOR.java.help = java
TRANSLATOR.java.file = java

TRANSLATOR.python.title = python Language
TRANSLATOR.python.help = python
TRANSLATOR.python.file = py


TRANSLATOR.digitalSignature = DIGITAL_SIGNATURE
TRANSLATOR.user = Programmer
TRANSLATOR.code = Code
TRANSLATOR.fullName = Name
TRANSLATOR.fileName = Program

#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#------------------------------------------------------------------------------
#-------        TOKEN PARSER                                      -------------
#------------------------------------------------------------------------------
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
TOKEN.exception.instructionRequired = expected token %1 and obtained %2\n
PROPERTIES.selectLang.title=Language
RUNTIME.ok=OK
RUNTIME.error=Error
RUNTIME.error.timeExceded=Exceeded runtime
RUNTIME.error.runtime=Execution error
RUNTIME.error.outputTooLong=too big result
RUNTIME.error.wrongAnswaer=wrong result
RUNTIME.error.presentation=bad formmated result
LAUNCHER.language.help=programing language
PROPERTIES.userNumber.default=0
LAUNCHER.language.title=Language
DEFINE.invalidDefininition=the variable definition\n %1 \nis wrong
TYPE.text.invalidPosition=the position %1 of the text %2 is not defined
PROPERTIES.userAvatar.error=user/error_user.png
PROPERTIES.selectLang.help=select language
PROPERTIES.userFullName.default=Annonym user
PROPERTIES.userAvatar.default=user/algorithmi_user.png
PROPERTIES.userName.default=Algorithmi
FUNCTION.popupMenu.functions.lang=language
TYPE.text.invalidIndexDimensions=the text variables only have one dimension
